// Code generated by protoc-gen-go. DO NOT EDIT.
// source: getcd.proto

package getcd

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegistryServer struct {
	App                  string   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Server               string   `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	Division             string   `protobuf:"bytes,3,opt,name=division,proto3" json:"division,omitempty"`
	Node                 string   `protobuf:"bytes,4,opt,name=node,proto3" json:"node,omitempty"`
	UseAgent             int32    `protobuf:"zigzag32,5,opt,name=use_agent,json=useAgent,proto3" json:"use_agent,omitempty"`
	NodeStatus           int32    `protobuf:"zigzag32,6,opt,name=node_status,json=nodeStatus,proto3" json:"node_status,omitempty"`
	ServiceStatus        int32    `protobuf:"zigzag32,7,opt,name=service_status,json=serviceStatus,proto3" json:"service_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegistryServer) Reset()         { *m = RegistryServer{} }
func (m *RegistryServer) String() string { return proto.CompactTextString(m) }
func (*RegistryServer) ProtoMessage()    {}
func (*RegistryServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f633d8278700483, []int{0}
}

func (m *RegistryServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegistryServer.Unmarshal(m, b)
}
func (m *RegistryServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegistryServer.Marshal(b, m, deterministic)
}
func (m *RegistryServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegistryServer.Merge(m, src)
}
func (m *RegistryServer) XXX_Size() int {
	return xxx_messageInfo_RegistryServer.Size(m)
}
func (m *RegistryServer) XXX_DiscardUnknown() {
	xxx_messageInfo_RegistryServer.DiscardUnknown(m)
}

var xxx_messageInfo_RegistryServer proto.InternalMessageInfo

func (m *RegistryServer) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *RegistryServer) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *RegistryServer) GetDivision() string {
	if m != nil {
		return m.Division
	}
	return ""
}

func (m *RegistryServer) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *RegistryServer) GetUseAgent() int32 {
	if m != nil {
		return m.UseAgent
	}
	return 0
}

func (m *RegistryServer) GetNodeStatus() int32 {
	if m != nil {
		return m.NodeStatus
	}
	return 0
}

func (m *RegistryServer) GetServiceStatus() int32 {
	if m != nil {
		return m.ServiceStatus
	}
	return 0
}

type RegistryService struct {
	App                  string   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Server               string   `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	Division             string   `protobuf:"bytes,3,opt,name=division,proto3" json:"division,omitempty"`
	Node                 string   `protobuf:"bytes,4,opt,name=node,proto3" json:"node,omitempty"`
	Service              string   `protobuf:"bytes,5,opt,name=service,proto3" json:"service,omitempty"`
	ServiceIp            string   `protobuf:"bytes,6,opt,name=service_ip,json=serviceIp,proto3" json:"service_ip,omitempty"`
	ServicePort          int32    `protobuf:"zigzag32,7,opt,name=service_port,json=servicePort,proto3" json:"service_port,omitempty"`
	RpcPort              int32    `protobuf:"zigzag32,8,opt,name=rpc_port,json=rpcPort,proto3" json:"rpc_port,omitempty"`
	AdminPort            int32    `protobuf:"zigzag32,9,opt,name=admin_port,json=adminPort,proto3" json:"admin_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegistryService) Reset()         { *m = RegistryService{} }
func (m *RegistryService) String() string { return proto.CompactTextString(m) }
func (*RegistryService) ProtoMessage()    {}
func (*RegistryService) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f633d8278700483, []int{1}
}

func (m *RegistryService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegistryService.Unmarshal(m, b)
}
func (m *RegistryService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegistryService.Marshal(b, m, deterministic)
}
func (m *RegistryService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegistryService.Merge(m, src)
}
func (m *RegistryService) XXX_Size() int {
	return xxx_messageInfo_RegistryService.Size(m)
}
func (m *RegistryService) XXX_DiscardUnknown() {
	xxx_messageInfo_RegistryService.DiscardUnknown(m)
}

var xxx_messageInfo_RegistryService proto.InternalMessageInfo

func (m *RegistryService) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *RegistryService) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *RegistryService) GetDivision() string {
	if m != nil {
		return m.Division
	}
	return ""
}

func (m *RegistryService) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *RegistryService) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *RegistryService) GetServiceIp() string {
	if m != nil {
		return m.ServiceIp
	}
	return ""
}

func (m *RegistryService) GetServicePort() int32 {
	if m != nil {
		return m.ServicePort
	}
	return 0
}

func (m *RegistryService) GetRpcPort() int32 {
	if m != nil {
		return m.RpcPort
	}
	return 0
}

func (m *RegistryService) GetAdminPort() int32 {
	if m != nil {
		return m.AdminPort
	}
	return 0
}

type QueryRegistryReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRegistryReq) Reset()         { *m = QueryRegistryReq{} }
func (m *QueryRegistryReq) String() string { return proto.CompactTextString(m) }
func (*QueryRegistryReq) ProtoMessage()    {}
func (*QueryRegistryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f633d8278700483, []int{2}
}

func (m *QueryRegistryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRegistryReq.Unmarshal(m, b)
}
func (m *QueryRegistryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRegistryReq.Marshal(b, m, deterministic)
}
func (m *QueryRegistryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRegistryReq.Merge(m, src)
}
func (m *QueryRegistryReq) XXX_Size() int {
	return xxx_messageInfo_QueryRegistryReq.Size(m)
}
func (m *QueryRegistryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRegistryReq.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRegistryReq proto.InternalMessageInfo

type QueryRegistryRsp struct {
	Result               int32              `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Servers              []*RegistryServer  `protobuf:"bytes,2,rep,name=servers,proto3" json:"servers,omitempty"`
	Services             []*RegistryService `protobuf:"bytes,3,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *QueryRegistryRsp) Reset()         { *m = QueryRegistryRsp{} }
func (m *QueryRegistryRsp) String() string { return proto.CompactTextString(m) }
func (*QueryRegistryRsp) ProtoMessage()    {}
func (*QueryRegistryRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f633d8278700483, []int{3}
}

func (m *QueryRegistryRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRegistryRsp.Unmarshal(m, b)
}
func (m *QueryRegistryRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRegistryRsp.Marshal(b, m, deterministic)
}
func (m *QueryRegistryRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRegistryRsp.Merge(m, src)
}
func (m *QueryRegistryRsp) XXX_Size() int {
	return xxx_messageInfo_QueryRegistryRsp.Size(m)
}
func (m *QueryRegistryRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRegistryRsp.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRegistryRsp proto.InternalMessageInfo

func (m *QueryRegistryRsp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *QueryRegistryRsp) GetServers() []*RegistryServer {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *QueryRegistryRsp) GetServices() []*RegistryService {
	if m != nil {
		return m.Services
	}
	return nil
}

type QueryGlobalConfigReq struct {
	Categories           []string `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryGlobalConfigReq) Reset()         { *m = QueryGlobalConfigReq{} }
func (m *QueryGlobalConfigReq) String() string { return proto.CompactTextString(m) }
func (*QueryGlobalConfigReq) ProtoMessage()    {}
func (*QueryGlobalConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f633d8278700483, []int{4}
}

func (m *QueryGlobalConfigReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryGlobalConfigReq.Unmarshal(m, b)
}
func (m *QueryGlobalConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryGlobalConfigReq.Marshal(b, m, deterministic)
}
func (m *QueryGlobalConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGlobalConfigReq.Merge(m, src)
}
func (m *QueryGlobalConfigReq) XXX_Size() int {
	return xxx_messageInfo_QueryGlobalConfigReq.Size(m)
}
func (m *QueryGlobalConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGlobalConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGlobalConfigReq proto.InternalMessageInfo

func (m *QueryGlobalConfigReq) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

type CategoryEntry struct {
	Category             string            `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Kv                   map[string]string `protobuf:"bytes,2,rep,name=kv,proto3" json:"kv,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CategoryEntry) Reset()         { *m = CategoryEntry{} }
func (m *CategoryEntry) String() string { return proto.CompactTextString(m) }
func (*CategoryEntry) ProtoMessage()    {}
func (*CategoryEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f633d8278700483, []int{5}
}

func (m *CategoryEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryEntry.Unmarshal(m, b)
}
func (m *CategoryEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryEntry.Marshal(b, m, deterministic)
}
func (m *CategoryEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryEntry.Merge(m, src)
}
func (m *CategoryEntry) XXX_Size() int {
	return xxx_messageInfo_CategoryEntry.Size(m)
}
func (m *CategoryEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryEntry.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryEntry proto.InternalMessageInfo

func (m *CategoryEntry) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *CategoryEntry) GetKv() map[string]string {
	if m != nil {
		return m.Kv
	}
	return nil
}

type QueryGlobalConfigRsp struct {
	Result               int32            `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Entries              []*CategoryEntry `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *QueryGlobalConfigRsp) Reset()         { *m = QueryGlobalConfigRsp{} }
func (m *QueryGlobalConfigRsp) String() string { return proto.CompactTextString(m) }
func (*QueryGlobalConfigRsp) ProtoMessage()    {}
func (*QueryGlobalConfigRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f633d8278700483, []int{6}
}

func (m *QueryGlobalConfigRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryGlobalConfigRsp.Unmarshal(m, b)
}
func (m *QueryGlobalConfigRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryGlobalConfigRsp.Marshal(b, m, deterministic)
}
func (m *QueryGlobalConfigRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGlobalConfigRsp.Merge(m, src)
}
func (m *QueryGlobalConfigRsp) XXX_Size() int {
	return xxx_messageInfo_QueryGlobalConfigRsp.Size(m)
}
func (m *QueryGlobalConfigRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGlobalConfigRsp.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGlobalConfigRsp proto.InternalMessageInfo

func (m *QueryGlobalConfigRsp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *QueryGlobalConfigRsp) GetEntries() []*CategoryEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type QueryProtoLimitReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryProtoLimitReq) Reset()         { *m = QueryProtoLimitReq{} }
func (m *QueryProtoLimitReq) String() string { return proto.CompactTextString(m) }
func (*QueryProtoLimitReq) ProtoMessage()    {}
func (*QueryProtoLimitReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f633d8278700483, []int{7}
}

func (m *QueryProtoLimitReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryProtoLimitReq.Unmarshal(m, b)
}
func (m *QueryProtoLimitReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryProtoLimitReq.Marshal(b, m, deterministic)
}
func (m *QueryProtoLimitReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProtoLimitReq.Merge(m, src)
}
func (m *QueryProtoLimitReq) XXX_Size() int {
	return xxx_messageInfo_QueryProtoLimitReq.Size(m)
}
func (m *QueryProtoLimitReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProtoLimitReq.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProtoLimitReq proto.InternalMessageInfo

type ProtoLimitEntry struct {
	ProtoId              int32    `protobuf:"varint,1,opt,name=proto_id,json=protoId,proto3" json:"proto_id,omitempty"`
	PlayerLimitEnable    int32    `protobuf:"varint,2,opt,name=player_limit_enable,json=playerLimitEnable,proto3" json:"player_limit_enable,omitempty"`
	PlayerLimitCount     int32    `protobuf:"varint,3,opt,name=player_limit_count,json=playerLimitCount,proto3" json:"player_limit_count,omitempty"`
	PlayerLimitDuration  int32    `protobuf:"varint,4,opt,name=player_limit_duration,json=playerLimitDuration,proto3" json:"player_limit_duration,omitempty"`
	ServerLimitEnable    int32    `protobuf:"varint,5,opt,name=server_limit_enable,json=serverLimitEnable,proto3" json:"server_limit_enable,omitempty"`
	ServerLimitCount     int32    `protobuf:"varint,6,opt,name=server_limit_count,json=serverLimitCount,proto3" json:"server_limit_count,omitempty"`
	ServerLimitDuration  int32    `protobuf:"varint,7,opt,name=server_limit_duration,json=serverLimitDuration,proto3" json:"server_limit_duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtoLimitEntry) Reset()         { *m = ProtoLimitEntry{} }
func (m *ProtoLimitEntry) String() string { return proto.CompactTextString(m) }
func (*ProtoLimitEntry) ProtoMessage()    {}
func (*ProtoLimitEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f633d8278700483, []int{8}
}

func (m *ProtoLimitEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtoLimitEntry.Unmarshal(m, b)
}
func (m *ProtoLimitEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtoLimitEntry.Marshal(b, m, deterministic)
}
func (m *ProtoLimitEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoLimitEntry.Merge(m, src)
}
func (m *ProtoLimitEntry) XXX_Size() int {
	return xxx_messageInfo_ProtoLimitEntry.Size(m)
}
func (m *ProtoLimitEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoLimitEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoLimitEntry proto.InternalMessageInfo

func (m *ProtoLimitEntry) GetProtoId() int32 {
	if m != nil {
		return m.ProtoId
	}
	return 0
}

func (m *ProtoLimitEntry) GetPlayerLimitEnable() int32 {
	if m != nil {
		return m.PlayerLimitEnable
	}
	return 0
}

func (m *ProtoLimitEntry) GetPlayerLimitCount() int32 {
	if m != nil {
		return m.PlayerLimitCount
	}
	return 0
}

func (m *ProtoLimitEntry) GetPlayerLimitDuration() int32 {
	if m != nil {
		return m.PlayerLimitDuration
	}
	return 0
}

func (m *ProtoLimitEntry) GetServerLimitEnable() int32 {
	if m != nil {
		return m.ServerLimitEnable
	}
	return 0
}

func (m *ProtoLimitEntry) GetServerLimitCount() int32 {
	if m != nil {
		return m.ServerLimitCount
	}
	return 0
}

func (m *ProtoLimitEntry) GetServerLimitDuration() int32 {
	if m != nil {
		return m.ServerLimitDuration
	}
	return 0
}

type QueryProtoLimitRsp struct {
	Result               int32              `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Entries              []*ProtoLimitEntry `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *QueryProtoLimitRsp) Reset()         { *m = QueryProtoLimitRsp{} }
func (m *QueryProtoLimitRsp) String() string { return proto.CompactTextString(m) }
func (*QueryProtoLimitRsp) ProtoMessage()    {}
func (*QueryProtoLimitRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f633d8278700483, []int{9}
}

func (m *QueryProtoLimitRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryProtoLimitRsp.Unmarshal(m, b)
}
func (m *QueryProtoLimitRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryProtoLimitRsp.Marshal(b, m, deterministic)
}
func (m *QueryProtoLimitRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProtoLimitRsp.Merge(m, src)
}
func (m *QueryProtoLimitRsp) XXX_Size() int {
	return xxx_messageInfo_QueryProtoLimitRsp.Size(m)
}
func (m *QueryProtoLimitRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProtoLimitRsp.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProtoLimitRsp proto.InternalMessageInfo

func (m *QueryProtoLimitRsp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *QueryProtoLimitRsp) GetEntries() []*ProtoLimitEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func init() {
	proto.RegisterType((*RegistryServer)(nil), "getcd.registry_server")
	proto.RegisterType((*RegistryService)(nil), "getcd.registry_service")
	proto.RegisterType((*QueryRegistryReq)(nil), "getcd.query_registry_req")
	proto.RegisterType((*QueryRegistryRsp)(nil), "getcd.query_registry_rsp")
	proto.RegisterType((*QueryGlobalConfigReq)(nil), "getcd.query_global_config_req")
	proto.RegisterType((*CategoryEntry)(nil), "getcd.category_entry")
	proto.RegisterMapType((map[string]string)(nil), "getcd.category_entry.KvEntry")
	proto.RegisterType((*QueryGlobalConfigRsp)(nil), "getcd.query_global_config_rsp")
	proto.RegisterType((*QueryProtoLimitReq)(nil), "getcd.query_proto_limit_req")
	proto.RegisterType((*ProtoLimitEntry)(nil), "getcd.proto_limit_entry")
	proto.RegisterType((*QueryProtoLimitRsp)(nil), "getcd.query_proto_limit_rsp")
}

func init() { proto.RegisterFile("getcd.proto", fileDescriptor_5f633d8278700483) }

var fileDescriptor_5f633d8278700483 = []byte{
	// 687 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0xc5, 0x49, 0x1d, 0xc7, 0x37, 0x7d, 0x65, 0xfa, 0x72, 0x03, 0x2d, 0xc1, 0x12, 0x52, 0x16,
	0x10, 0x50, 0x2a, 0x24, 0x60, 0x87, 0x4a, 0x55, 0x55, 0x20, 0x51, 0x5c, 0xb1, 0xb6, 0x1c, 0x7b,
	0x88, 0x46, 0x75, 0x6d, 0x77, 0x3c, 0x8e, 0x94, 0x2d, 0x9f, 0x00, 0x3f, 0x86, 0xf8, 0x21, 0xd0,
	0xdc, 0x19, 0x5b, 0x76, 0xda, 0x66, 0xc7, 0x2a, 0xbe, 0xe7, 0x9c, 0x3b, 0x73, 0xee, 0x63, 0x02,
	0xbd, 0x19, 0x15, 0x61, 0x34, 0xce, 0x78, 0x2a, 0x52, 0x62, 0x62, 0xe0, 0xfe, 0x36, 0x60, 0x8b,
	0xd3, 0x19, 0xcb, 0x05, 0x5f, 0xf8, 0x39, 0xe5, 0x73, 0xca, 0xc9, 0x36, 0xb4, 0x83, 0x2c, 0x73,
	0x8c, 0xa1, 0x31, 0xb2, 0x3d, 0xf9, 0x49, 0xf6, 0xa1, 0xa3, 0x38, 0xa7, 0x85, 0xa0, 0x8e, 0xc8,
	0x00, 0xba, 0x11, 0x9b, 0xb3, 0x9c, 0xa5, 0x89, 0xd3, 0x46, 0xa6, 0x8a, 0x09, 0x81, 0xb5, 0x24,
	0x8d, 0xa8, 0xb3, 0x86, 0x38, 0x7e, 0x93, 0xc7, 0x60, 0x17, 0x39, 0xf5, 0x83, 0x19, 0x4d, 0x84,
	0x63, 0x0e, 0x8d, 0x51, 0xdf, 0xeb, 0x16, 0x39, 0xfd, 0x20, 0x63, 0xf2, 0x14, 0x7a, 0x52, 0xe4,
	0xe7, 0x22, 0x10, 0x45, 0xee, 0x74, 0x90, 0x06, 0x09, 0x5d, 0x21, 0x42, 0x9e, 0xc3, 0xa6, 0xbc,
	0x97, 0x85, 0x95, 0xc6, 0x42, 0xcd, 0x86, 0x46, 0x95, 0xcc, 0xfd, 0xd1, 0x82, 0xed, 0x46, 0x49,
	0x2c, 0xa4, 0xff, 0xb1, 0x26, 0x07, 0x2c, 0x7d, 0x09, 0x56, 0x64, 0x7b, 0x65, 0x48, 0x8e, 0x00,
	0x4a, 0xbf, 0x2c, 0xc3, 0x7a, 0x6c, 0xcf, 0xd6, 0xc8, 0x45, 0x46, 0x9e, 0xc1, 0x7a, 0x49, 0x67,
	0x29, 0x17, 0xba, 0x98, 0x9e, 0xc6, 0x2e, 0x53, 0x2e, 0xc8, 0x21, 0x74, 0x79, 0x16, 0x2a, 0xba,
	0x8b, 0xb4, 0xc5, 0xb3, 0x10, 0xa9, 0x23, 0x80, 0x20, 0xba, 0x61, 0x89, 0x22, 0x6d, 0x24, 0x6d,
	0x44, 0x24, 0xed, 0xee, 0x02, 0xb9, 0x2d, 0x28, 0x5f, 0xf8, 0x55, 0x27, 0x38, 0xbd, 0x75, 0x7f,
	0x19, 0x77, 0xe1, 0x1c, 0x5b, 0xc1, 0x69, 0x5e, 0xc4, 0x02, 0xfb, 0x63, 0x7a, 0x3a, 0x22, 0xaf,
	0x55, 0x69, 0x94, 0xe7, 0x4e, 0x6b, 0xd8, 0x1e, 0xf5, 0x26, 0xfb, 0x63, 0xb5, 0x42, 0x4b, 0x1b,
	0xe3, 0x95, 0x32, 0x72, 0x02, 0x5d, 0xed, 0x3f, 0x77, 0xda, 0x98, 0x72, 0x70, 0x5f, 0x0a, 0x0b,
	0xa9, 0x57, 0x09, 0xdd, 0x77, 0x70, 0xa0, 0x4c, 0xcd, 0xe2, 0x74, 0x1a, 0xc4, 0x7e, 0x98, 0x26,
	0xdf, 0xd9, 0x4c, 0x1a, 0x26, 0xc7, 0x00, 0x61, 0x20, 0xe8, 0x2c, 0xe5, 0x8c, 0xe6, 0x8e, 0x31,
	0x6c, 0x8f, 0x6c, 0xaf, 0x86, 0xb8, 0x3f, 0x0d, 0xd8, 0xd4, 0xe1, 0xc2, 0xa7, 0x89, 0xe0, 0x0b,
	0x39, 0xbf, 0x12, 0xd1, 0xe3, 0xae, 0x62, 0xf2, 0x12, 0x5a, 0xd7, 0x73, 0x5d, 0xcb, 0x91, 0x36,
	0xd6, 0x4c, 0x1f, 0x7f, 0x9a, 0x9f, 0xc9, 0x5f, 0xaf, 0x75, 0x3d, 0x1f, 0xbc, 0x01, 0x4b, 0x87,
	0x72, 0x7f, 0xae, 0x69, 0x79, 0xa0, 0xfc, 0x24, 0xbb, 0x60, 0xce, 0x83, 0xb8, 0xa0, 0x7a, 0x7d,
	0x54, 0xf0, 0xbe, 0xf5, 0xd6, 0x70, 0xa7, 0x0f, 0xd4, 0xb3, 0xa2, 0xd3, 0xaf, 0xc0, 0x92, 0xd7,
	0xcb, 0x22, 0x95, 0xbb, 0xbd, 0x7b, 0xdd, 0x79, 0xa5, 0xca, 0x3d, 0x80, 0x3d, 0x75, 0x07, 0xbe,
	0x66, 0x3f, 0x66, 0x37, 0x4c, 0xe0, 0x88, 0xff, 0xb4, 0xa0, 0x5f, 0xc7, 0x54, 0x53, 0x0e, 0xa1,
	0xab, 0x40, 0x16, 0xe9, 0x9b, 0x2d, 0x8c, 0x2f, 0x22, 0x32, 0x86, 0x9d, 0x2c, 0x0e, 0x16, 0x94,
	0x57, 0x09, 0xc1, 0x34, 0x56, 0x55, 0x99, 0x5e, 0x5f, 0x51, 0x9f, 0x25, 0x73, 0x86, 0x04, 0x79,
	0x01, 0xa4, 0xa1, 0x0f, 0xd3, 0x22, 0x11, 0xf8, 0x52, 0x4c, 0x6f, 0xbb, 0x26, 0x3f, 0x95, 0x38,
	0x99, 0xc0, 0x5e, 0x43, 0x1d, 0x15, 0x3c, 0x10, 0xf2, 0x69, 0xad, 0x61, 0xc2, 0x4e, 0x2d, 0xe1,
	0xa3, 0xa6, 0xa4, 0x23, 0xb5, 0x4f, 0x4d, 0x47, 0xa6, 0x72, 0xa4, 0xa8, 0x25, 0x47, 0x0d, 0xbd,
	0x72, 0xd4, 0x51, 0x8e, 0x6a, 0xf2, 0xca, 0x51, 0x43, 0x5d, 0x39, 0xb2, 0x94, 0xa3, 0x5a, 0x42,
	0xe9, 0xc8, 0x0d, 0xef, 0xed, 0xf6, 0x8a, 0x79, 0x4e, 0x96, 0xe7, 0xe9, 0x8c, 0x6b, 0x7f, 0xbe,
	0xf5, 0xd1, 0x54, 0x23, 0x9d, 0xfc, 0x35, 0x60, 0xfd, 0x5c, 0x8a, 0xae, 0xf4, 0xff, 0xc7, 0x39,
	0x6c, 0x7c, 0x95, 0xb7, 0x7a, 0xfa, 0xe9, 0x90, 0x43, 0x7d, 0xc8, 0xdd, 0x97, 0x3d, 0x78, 0x88,
	0xca, 0x33, 0xf7, 0x11, 0xf9, 0x06, 0x7d, 0x3c, 0xe8, 0x1c, 0xf7, 0xf1, 0x14, 0xd7, 0x91, 0x1c,
	0x37, 0x32, 0xee, 0x3c, 0xbd, 0xc1, 0x4a, 0x1e, 0x8f, 0xfd, 0x02, 0x5b, 0x78, 0xec, 0xa5, 0xac,
	0x09, 0x1b, 0x46, 0x9e, 0x34, 0x92, 0x96, 0x76, 0x73, 0xb0, 0x82, 0x95, 0x07, 0x4e, 0x3b, 0x08,
	0x9d, 0xfc, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x82, 0x9f, 0xdc, 0x6d, 0xa9, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GetcdServiceClient is the client API for GetcdService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GetcdServiceClient interface {
	QueryRegistry(ctx context.Context, in *QueryRegistryReq, opts ...grpc.CallOption) (*QueryRegistryRsp, error)
	QueryGlobalConfig(ctx context.Context, in *QueryGlobalConfigReq, opts ...grpc.CallOption) (*QueryGlobalConfigRsp, error)
	QueryProtoLimit(ctx context.Context, in *QueryProtoLimitReq, opts ...grpc.CallOption) (*QueryProtoLimitRsp, error)
}

type getcdServiceClient struct {
	cc *grpc.ClientConn
}

func NewGetcdServiceClient(cc *grpc.ClientConn) GetcdServiceClient {
	return &getcdServiceClient{cc}
}

func (c *getcdServiceClient) QueryRegistry(ctx context.Context, in *QueryRegistryReq, opts ...grpc.CallOption) (*QueryRegistryRsp, error) {
	out := new(QueryRegistryRsp)
	err := c.cc.Invoke(ctx, "/getcd.GetcdService/QueryRegistry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getcdServiceClient) QueryGlobalConfig(ctx context.Context, in *QueryGlobalConfigReq, opts ...grpc.CallOption) (*QueryGlobalConfigRsp, error) {
	out := new(QueryGlobalConfigRsp)
	err := c.cc.Invoke(ctx, "/getcd.GetcdService/QueryGlobalConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getcdServiceClient) QueryProtoLimit(ctx context.Context, in *QueryProtoLimitReq, opts ...grpc.CallOption) (*QueryProtoLimitRsp, error) {
	out := new(QueryProtoLimitRsp)
	err := c.cc.Invoke(ctx, "/getcd.GetcdService/QueryProtoLimit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetcdServiceServer is the server API for GetcdService service.
type GetcdServiceServer interface {
	QueryRegistry(context.Context, *QueryRegistryReq) (*QueryRegistryRsp, error)
	QueryGlobalConfig(context.Context, *QueryGlobalConfigReq) (*QueryGlobalConfigRsp, error)
	QueryProtoLimit(context.Context, *QueryProtoLimitReq) (*QueryProtoLimitRsp, error)
}

// UnimplementedGetcdServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGetcdServiceServer struct {
}

func (*UnimplementedGetcdServiceServer) QueryRegistry(ctx context.Context, req *QueryRegistryReq) (*QueryRegistryRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryRegistry not implemented")
}
func (*UnimplementedGetcdServiceServer) QueryGlobalConfig(ctx context.Context, req *QueryGlobalConfigReq) (*QueryGlobalConfigRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryGlobalConfig not implemented")
}
func (*UnimplementedGetcdServiceServer) QueryProtoLimit(ctx context.Context, req *QueryProtoLimitReq) (*QueryProtoLimitRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryProtoLimit not implemented")
}

func RegisterGetcdServiceServer(s *grpc.Server, srv GetcdServiceServer) {
	s.RegisterService(&_GetcdService_serviceDesc, srv)
}

func _GetcdService_QueryRegistry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRegistryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetcdServiceServer).QueryRegistry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/getcd.GetcdService/QueryRegistry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetcdServiceServer).QueryRegistry(ctx, req.(*QueryRegistryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetcdService_QueryGlobalConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGlobalConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetcdServiceServer).QueryGlobalConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/getcd.GetcdService/QueryGlobalConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetcdServiceServer).QueryGlobalConfig(ctx, req.(*QueryGlobalConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetcdService_QueryProtoLimit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryProtoLimitReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetcdServiceServer).QueryProtoLimit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/getcd.GetcdService/QueryProtoLimit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetcdServiceServer).QueryProtoLimit(ctx, req.(*QueryProtoLimitReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetcdService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "getcd.GetcdService",
	HandlerType: (*GetcdServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryRegistry",
			Handler:    _GetcdService_QueryRegistry_Handler,
		},
		{
			MethodName: "QueryGlobalConfig",
			Handler:    _GetcdService_QueryGlobalConfig_Handler,
		},
		{
			MethodName: "QueryProtoLimit",
			Handler:    _GetcdService_QueryProtoLimit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "getcd.proto",
}
