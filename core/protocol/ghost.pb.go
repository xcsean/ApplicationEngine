// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ghost.proto

package protocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GhostPacket struct {
	CmdId                uint32   `protobuf:"varint,1,opt,name=cmd_id,json=cmdId,proto3" json:"cmd_id,omitempty"`
	UserData             uint32   `protobuf:"varint,2,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	Timestamp            uint32   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sessions             []uint64 `protobuf:"varint,4,rep,packed,name=sessions,proto3" json:"sessions,omitempty"`
	Body                 string   `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GhostPacket) Reset()         { *m = GhostPacket{} }
func (m *GhostPacket) String() string { return proto.CompactTextString(m) }
func (*GhostPacket) ProtoMessage()    {}
func (*GhostPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{0}
}

func (m *GhostPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GhostPacket.Unmarshal(m, b)
}
func (m *GhostPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GhostPacket.Marshal(b, m, deterministic)
}
func (m *GhostPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GhostPacket.Merge(m, src)
}
func (m *GhostPacket) XXX_Size() int {
	return xxx_messageInfo_GhostPacket.Size(m)
}
func (m *GhostPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_GhostPacket.DiscardUnknown(m)
}

var xxx_messageInfo_GhostPacket proto.InternalMessageInfo

func (m *GhostPacket) GetCmdId() uint32 {
	if m != nil {
		return m.CmdId
	}
	return 0
}

func (m *GhostPacket) GetUserData() uint32 {
	if m != nil {
		return m.UserData
	}
	return 0
}

func (m *GhostPacket) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GhostPacket) GetSessions() []uint64 {
	if m != nil {
		return m.Sessions
	}
	return nil
}

func (m *GhostPacket) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type GhostUserasset struct {
	Uuid                 uint64   `protobuf:"varint,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Version              uint64   `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Asset                string   `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GhostUserasset) Reset()         { *m = GhostUserasset{} }
func (m *GhostUserasset) String() string { return proto.CompactTextString(m) }
func (*GhostUserasset) ProtoMessage()    {}
func (*GhostUserasset) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{1}
}

func (m *GhostUserasset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GhostUserasset.Unmarshal(m, b)
}
func (m *GhostUserasset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GhostUserasset.Marshal(b, m, deterministic)
}
func (m *GhostUserasset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GhostUserasset.Merge(m, src)
}
func (m *GhostUserasset) XXX_Size() int {
	return xxx_messageInfo_GhostUserasset.Size(m)
}
func (m *GhostUserasset) XXX_DiscardUnknown() {
	xxx_messageInfo_GhostUserasset.DiscardUnknown(m)
}

var xxx_messageInfo_GhostUserasset proto.InternalMessageInfo

func (m *GhostUserasset) GetUuid() uint64 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

func (m *GhostUserasset) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GhostUserasset) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

type RegisterVmReq struct {
	Division             string   `protobuf:"bytes,1,opt,name=division,proto3" json:"division,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterVmReq) Reset()         { *m = RegisterVmReq{} }
func (m *RegisterVmReq) String() string { return proto.CompactTextString(m) }
func (*RegisterVmReq) ProtoMessage()    {}
func (*RegisterVmReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{2}
}

func (m *RegisterVmReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterVmReq.Unmarshal(m, b)
}
func (m *RegisterVmReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterVmReq.Marshal(b, m, deterministic)
}
func (m *RegisterVmReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterVmReq.Merge(m, src)
}
func (m *RegisterVmReq) XXX_Size() int {
	return xxx_messageInfo_RegisterVmReq.Size(m)
}
func (m *RegisterVmReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterVmReq.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterVmReq proto.InternalMessageInfo

func (m *RegisterVmReq) GetDivision() string {
	if m != nil {
		return m.Division
	}
	return ""
}

func (m *RegisterVmReq) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type RegisterVmRsp struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Vmid                 uint64   `protobuf:"varint,2,opt,name=vmid,proto3" json:"vmid,omitempty"`
	Hostid               uint64   `protobuf:"varint,3,opt,name=hostid,proto3" json:"hostid,omitempty"`
	Desc                 string   `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterVmRsp) Reset()         { *m = RegisterVmRsp{} }
func (m *RegisterVmRsp) String() string { return proto.CompactTextString(m) }
func (*RegisterVmRsp) ProtoMessage()    {}
func (*RegisterVmRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{3}
}

func (m *RegisterVmRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterVmRsp.Unmarshal(m, b)
}
func (m *RegisterVmRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterVmRsp.Marshal(b, m, deterministic)
}
func (m *RegisterVmRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterVmRsp.Merge(m, src)
}
func (m *RegisterVmRsp) XXX_Size() int {
	return xxx_messageInfo_RegisterVmRsp.Size(m)
}
func (m *RegisterVmRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterVmRsp.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterVmRsp proto.InternalMessageInfo

func (m *RegisterVmRsp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *RegisterVmRsp) GetVmid() uint64 {
	if m != nil {
		return m.Vmid
	}
	return 0
}

func (m *RegisterVmRsp) GetHostid() uint64 {
	if m != nil {
		return m.Hostid
	}
	return 0
}

func (m *RegisterVmRsp) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type UnregisterVmReq struct {
	Division             string   `protobuf:"bytes,1,opt,name=division,proto3" json:"division,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Vmid                 uint64   `protobuf:"varint,3,opt,name=vmid,proto3" json:"vmid,omitempty"`
	Hostid               uint64   `protobuf:"varint,4,opt,name=hostid,proto3" json:"hostid,omitempty"`
	Desc                 string   `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterVmReq) Reset()         { *m = UnregisterVmReq{} }
func (m *UnregisterVmReq) String() string { return proto.CompactTextString(m) }
func (*UnregisterVmReq) ProtoMessage()    {}
func (*UnregisterVmReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{4}
}

func (m *UnregisterVmReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnregisterVmReq.Unmarshal(m, b)
}
func (m *UnregisterVmReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnregisterVmReq.Marshal(b, m, deterministic)
}
func (m *UnregisterVmReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterVmReq.Merge(m, src)
}
func (m *UnregisterVmReq) XXX_Size() int {
	return xxx_messageInfo_UnregisterVmReq.Size(m)
}
func (m *UnregisterVmReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterVmReq.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterVmReq proto.InternalMessageInfo

func (m *UnregisterVmReq) GetDivision() string {
	if m != nil {
		return m.Division
	}
	return ""
}

func (m *UnregisterVmReq) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *UnregisterVmReq) GetVmid() uint64 {
	if m != nil {
		return m.Vmid
	}
	return 0
}

func (m *UnregisterVmReq) GetHostid() uint64 {
	if m != nil {
		return m.Hostid
	}
	return 0
}

func (m *UnregisterVmReq) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type UnregisterVmRsp struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Desc                 string   `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterVmRsp) Reset()         { *m = UnregisterVmRsp{} }
func (m *UnregisterVmRsp) String() string { return proto.CompactTextString(m) }
func (*UnregisterVmRsp) ProtoMessage()    {}
func (*UnregisterVmRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{5}
}

func (m *UnregisterVmRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnregisterVmRsp.Unmarshal(m, b)
}
func (m *UnregisterVmRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnregisterVmRsp.Marshal(b, m, deterministic)
}
func (m *UnregisterVmRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterVmRsp.Merge(m, src)
}
func (m *UnregisterVmRsp) XXX_Size() int {
	return xxx_messageInfo_UnregisterVmRsp.Size(m)
}
func (m *UnregisterVmRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterVmRsp.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterVmRsp proto.InternalMessageInfo

func (m *UnregisterVmRsp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *UnregisterVmRsp) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type BindSessionReq struct {
	Division             string   `protobuf:"bytes,1,opt,name=division,proto3" json:"division,omitempty"`
	Sessionid            uint64   `protobuf:"varint,2,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Uuid                 uint64   `protobuf:"varint,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BindSessionReq) Reset()         { *m = BindSessionReq{} }
func (m *BindSessionReq) String() string { return proto.CompactTextString(m) }
func (*BindSessionReq) ProtoMessage()    {}
func (*BindSessionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{6}
}

func (m *BindSessionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BindSessionReq.Unmarshal(m, b)
}
func (m *BindSessionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BindSessionReq.Marshal(b, m, deterministic)
}
func (m *BindSessionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindSessionReq.Merge(m, src)
}
func (m *BindSessionReq) XXX_Size() int {
	return xxx_messageInfo_BindSessionReq.Size(m)
}
func (m *BindSessionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BindSessionReq.DiscardUnknown(m)
}

var xxx_messageInfo_BindSessionReq proto.InternalMessageInfo

func (m *BindSessionReq) GetDivision() string {
	if m != nil {
		return m.Division
	}
	return ""
}

func (m *BindSessionReq) GetSessionid() uint64 {
	if m != nil {
		return m.Sessionid
	}
	return 0
}

func (m *BindSessionReq) GetUuid() uint64 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

type BindSessionRsp struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Division             string   `protobuf:"bytes,2,opt,name=division,proto3" json:"division,omitempty"`
	Sessionid            uint64   `protobuf:"varint,3,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Uuid                 uint64   `protobuf:"varint,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BindSessionRsp) Reset()         { *m = BindSessionRsp{} }
func (m *BindSessionRsp) String() string { return proto.CompactTextString(m) }
func (*BindSessionRsp) ProtoMessage()    {}
func (*BindSessionRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{7}
}

func (m *BindSessionRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BindSessionRsp.Unmarshal(m, b)
}
func (m *BindSessionRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BindSessionRsp.Marshal(b, m, deterministic)
}
func (m *BindSessionRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindSessionRsp.Merge(m, src)
}
func (m *BindSessionRsp) XXX_Size() int {
	return xxx_messageInfo_BindSessionRsp.Size(m)
}
func (m *BindSessionRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_BindSessionRsp.DiscardUnknown(m)
}

var xxx_messageInfo_BindSessionRsp proto.InternalMessageInfo

func (m *BindSessionRsp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *BindSessionRsp) GetDivision() string {
	if m != nil {
		return m.Division
	}
	return ""
}

func (m *BindSessionRsp) GetSessionid() uint64 {
	if m != nil {
		return m.Sessionid
	}
	return 0
}

func (m *BindSessionRsp) GetUuid() uint64 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

type UnbindSessionReq struct {
	Division             string   `protobuf:"bytes,1,opt,name=division,proto3" json:"division,omitempty"`
	Sessionid            uint64   `protobuf:"varint,2,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Uuid                 uint64   `protobuf:"varint,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnbindSessionReq) Reset()         { *m = UnbindSessionReq{} }
func (m *UnbindSessionReq) String() string { return proto.CompactTextString(m) }
func (*UnbindSessionReq) ProtoMessage()    {}
func (*UnbindSessionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{8}
}

func (m *UnbindSessionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnbindSessionReq.Unmarshal(m, b)
}
func (m *UnbindSessionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnbindSessionReq.Marshal(b, m, deterministic)
}
func (m *UnbindSessionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnbindSessionReq.Merge(m, src)
}
func (m *UnbindSessionReq) XXX_Size() int {
	return xxx_messageInfo_UnbindSessionReq.Size(m)
}
func (m *UnbindSessionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UnbindSessionReq.DiscardUnknown(m)
}

var xxx_messageInfo_UnbindSessionReq proto.InternalMessageInfo

func (m *UnbindSessionReq) GetDivision() string {
	if m != nil {
		return m.Division
	}
	return ""
}

func (m *UnbindSessionReq) GetSessionid() uint64 {
	if m != nil {
		return m.Sessionid
	}
	return 0
}

func (m *UnbindSessionReq) GetUuid() uint64 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

type UnbindSessionRsp struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Division             string   `protobuf:"bytes,2,opt,name=division,proto3" json:"division,omitempty"`
	Sessionid            uint64   `protobuf:"varint,3,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Uuid                 uint64   `protobuf:"varint,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnbindSessionRsp) Reset()         { *m = UnbindSessionRsp{} }
func (m *UnbindSessionRsp) String() string { return proto.CompactTextString(m) }
func (*UnbindSessionRsp) ProtoMessage()    {}
func (*UnbindSessionRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{9}
}

func (m *UnbindSessionRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnbindSessionRsp.Unmarshal(m, b)
}
func (m *UnbindSessionRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnbindSessionRsp.Marshal(b, m, deterministic)
}
func (m *UnbindSessionRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnbindSessionRsp.Merge(m, src)
}
func (m *UnbindSessionRsp) XXX_Size() int {
	return xxx_messageInfo_UnbindSessionRsp.Size(m)
}
func (m *UnbindSessionRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_UnbindSessionRsp.DiscardUnknown(m)
}

var xxx_messageInfo_UnbindSessionRsp proto.InternalMessageInfo

func (m *UnbindSessionRsp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *UnbindSessionRsp) GetDivision() string {
	if m != nil {
		return m.Division
	}
	return ""
}

func (m *UnbindSessionRsp) GetSessionid() uint64 {
	if m != nil {
		return m.Sessionid
	}
	return 0
}

func (m *UnbindSessionRsp) GetUuid() uint64 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

type LockUserassetReq struct {
	Division             string          `protobuf:"bytes,1,opt,name=division,proto3" json:"division,omitempty"`
	Sessionid            uint64          `protobuf:"varint,2,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Uuid                 uint64          `protobuf:"varint,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Duration             int64           `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Userasset            *GhostUserasset `protobuf:"bytes,5,opt,name=userasset,proto3" json:"userasset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LockUserassetReq) Reset()         { *m = LockUserassetReq{} }
func (m *LockUserassetReq) String() string { return proto.CompactTextString(m) }
func (*LockUserassetReq) ProtoMessage()    {}
func (*LockUserassetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{10}
}

func (m *LockUserassetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockUserassetReq.Unmarshal(m, b)
}
func (m *LockUserassetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockUserassetReq.Marshal(b, m, deterministic)
}
func (m *LockUserassetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockUserassetReq.Merge(m, src)
}
func (m *LockUserassetReq) XXX_Size() int {
	return xxx_messageInfo_LockUserassetReq.Size(m)
}
func (m *LockUserassetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LockUserassetReq.DiscardUnknown(m)
}

var xxx_messageInfo_LockUserassetReq proto.InternalMessageInfo

func (m *LockUserassetReq) GetDivision() string {
	if m != nil {
		return m.Division
	}
	return ""
}

func (m *LockUserassetReq) GetSessionid() uint64 {
	if m != nil {
		return m.Sessionid
	}
	return 0
}

func (m *LockUserassetReq) GetUuid() uint64 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

func (m *LockUserassetReq) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *LockUserassetReq) GetUserasset() *GhostUserasset {
	if m != nil {
		return m.Userasset
	}
	return nil
}

type LockUserassetRsp struct {
	Result               int32           `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Expired              int64           `protobuf:"varint,2,opt,name=expired,proto3" json:"expired,omitempty"`
	Userasset            *GhostUserasset `protobuf:"bytes,3,opt,name=userasset,proto3" json:"userasset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LockUserassetRsp) Reset()         { *m = LockUserassetRsp{} }
func (m *LockUserassetRsp) String() string { return proto.CompactTextString(m) }
func (*LockUserassetRsp) ProtoMessage()    {}
func (*LockUserassetRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{11}
}

func (m *LockUserassetRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockUserassetRsp.Unmarshal(m, b)
}
func (m *LockUserassetRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockUserassetRsp.Marshal(b, m, deterministic)
}
func (m *LockUserassetRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockUserassetRsp.Merge(m, src)
}
func (m *LockUserassetRsp) XXX_Size() int {
	return xxx_messageInfo_LockUserassetRsp.Size(m)
}
func (m *LockUserassetRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_LockUserassetRsp.DiscardUnknown(m)
}

var xxx_messageInfo_LockUserassetRsp proto.InternalMessageInfo

func (m *LockUserassetRsp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *LockUserassetRsp) GetExpired() int64 {
	if m != nil {
		return m.Expired
	}
	return 0
}

func (m *LockUserassetRsp) GetUserasset() *GhostUserasset {
	if m != nil {
		return m.Userasset
	}
	return nil
}

type UnlockUserassetReq struct {
	Sessionid            uint64          `protobuf:"varint,1,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Uuid                 uint64          `protobuf:"varint,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Userasset            *GhostUserasset `protobuf:"bytes,3,opt,name=userasset,proto3" json:"userasset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UnlockUserassetReq) Reset()         { *m = UnlockUserassetReq{} }
func (m *UnlockUserassetReq) String() string { return proto.CompactTextString(m) }
func (*UnlockUserassetReq) ProtoMessage()    {}
func (*UnlockUserassetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{12}
}

func (m *UnlockUserassetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockUserassetReq.Unmarshal(m, b)
}
func (m *UnlockUserassetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockUserassetReq.Marshal(b, m, deterministic)
}
func (m *UnlockUserassetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockUserassetReq.Merge(m, src)
}
func (m *UnlockUserassetReq) XXX_Size() int {
	return xxx_messageInfo_UnlockUserassetReq.Size(m)
}
func (m *UnlockUserassetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockUserassetReq.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockUserassetReq proto.InternalMessageInfo

func (m *UnlockUserassetReq) GetSessionid() uint64 {
	if m != nil {
		return m.Sessionid
	}
	return 0
}

func (m *UnlockUserassetReq) GetUuid() uint64 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

func (m *UnlockUserassetReq) GetUserasset() *GhostUserasset {
	if m != nil {
		return m.Userasset
	}
	return nil
}

type UnlockUserassetRsp struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockUserassetRsp) Reset()         { *m = UnlockUserassetRsp{} }
func (m *UnlockUserassetRsp) String() string { return proto.CompactTextString(m) }
func (*UnlockUserassetRsp) ProtoMessage()    {}
func (*UnlockUserassetRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{13}
}

func (m *UnlockUserassetRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockUserassetRsp.Unmarshal(m, b)
}
func (m *UnlockUserassetRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockUserassetRsp.Marshal(b, m, deterministic)
}
func (m *UnlockUserassetRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockUserassetRsp.Merge(m, src)
}
func (m *UnlockUserassetRsp) XXX_Size() int {
	return xxx_messageInfo_UnlockUserassetRsp.Size(m)
}
func (m *UnlockUserassetRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockUserassetRsp.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockUserassetRsp proto.InternalMessageInfo

func (m *UnlockUserassetRsp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type DebugReq struct {
	Division             string   `protobuf:"bytes,1,opt,name=division,proto3" json:"division,omitempty"`
	Cmdop                string   `protobuf:"bytes,2,opt,name=cmdop,proto3" json:"cmdop,omitempty"`
	Cmdparam             string   `protobuf:"bytes,3,opt,name=cmdparam,proto3" json:"cmdparam,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugReq) Reset()         { *m = DebugReq{} }
func (m *DebugReq) String() string { return proto.CompactTextString(m) }
func (*DebugReq) ProtoMessage()    {}
func (*DebugReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{14}
}

func (m *DebugReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugReq.Unmarshal(m, b)
}
func (m *DebugReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugReq.Marshal(b, m, deterministic)
}
func (m *DebugReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugReq.Merge(m, src)
}
func (m *DebugReq) XXX_Size() int {
	return xxx_messageInfo_DebugReq.Size(m)
}
func (m *DebugReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugReq.DiscardUnknown(m)
}

var xxx_messageInfo_DebugReq proto.InternalMessageInfo

func (m *DebugReq) GetDivision() string {
	if m != nil {
		return m.Division
	}
	return ""
}

func (m *DebugReq) GetCmdop() string {
	if m != nil {
		return m.Cmdop
	}
	return ""
}

func (m *DebugReq) GetCmdparam() string {
	if m != nil {
		return m.Cmdparam
	}
	return ""
}

type DebugRsp struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Desc                 string   `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugRsp) Reset()         { *m = DebugRsp{} }
func (m *DebugRsp) String() string { return proto.CompactTextString(m) }
func (*DebugRsp) ProtoMessage()    {}
func (*DebugRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{15}
}

func (m *DebugRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugRsp.Unmarshal(m, b)
}
func (m *DebugRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugRsp.Marshal(b, m, deterministic)
}
func (m *DebugRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugRsp.Merge(m, src)
}
func (m *DebugRsp) XXX_Size() int {
	return xxx_messageInfo_DebugRsp.Size(m)
}
func (m *DebugRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugRsp.DiscardUnknown(m)
}

var xxx_messageInfo_DebugRsp proto.InternalMessageInfo

func (m *DebugRsp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *DebugRsp) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type NotifyStatusReq struct {
	Status               uint32   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyStatusReq) Reset()         { *m = NotifyStatusReq{} }
func (m *NotifyStatusReq) String() string { return proto.CompactTextString(m) }
func (*NotifyStatusReq) ProtoMessage()    {}
func (*NotifyStatusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{16}
}

func (m *NotifyStatusReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyStatusReq.Unmarshal(m, b)
}
func (m *NotifyStatusReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyStatusReq.Marshal(b, m, deterministic)
}
func (m *NotifyStatusReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyStatusReq.Merge(m, src)
}
func (m *NotifyStatusReq) XXX_Size() int {
	return xxx_messageInfo_NotifyStatusReq.Size(m)
}
func (m *NotifyStatusReq) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyStatusReq.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyStatusReq proto.InternalMessageInfo

func (m *NotifyStatusReq) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type NotifyStatusRsp struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Desc                 string   `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyStatusRsp) Reset()         { *m = NotifyStatusRsp{} }
func (m *NotifyStatusRsp) String() string { return proto.CompactTextString(m) }
func (*NotifyStatusRsp) ProtoMessage()    {}
func (*NotifyStatusRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{17}
}

func (m *NotifyStatusRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyStatusRsp.Unmarshal(m, b)
}
func (m *NotifyStatusRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyStatusRsp.Marshal(b, m, deterministic)
}
func (m *NotifyStatusRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyStatusRsp.Merge(m, src)
}
func (m *NotifyStatusRsp) XXX_Size() int {
	return xxx_messageInfo_NotifyStatusRsp.Size(m)
}
func (m *NotifyStatusRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyStatusRsp.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyStatusRsp proto.InternalMessageInfo

func (m *NotifyStatusRsp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *NotifyStatusRsp) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type NotifyPacketRsp struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyPacketRsp) Reset()         { *m = NotifyPacketRsp{} }
func (m *NotifyPacketRsp) String() string { return proto.CompactTextString(m) }
func (*NotifyPacketRsp) ProtoMessage()    {}
func (*NotifyPacketRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_77edc9f77fb63d46, []int{18}
}

func (m *NotifyPacketRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyPacketRsp.Unmarshal(m, b)
}
func (m *NotifyPacketRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyPacketRsp.Marshal(b, m, deterministic)
}
func (m *NotifyPacketRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyPacketRsp.Merge(m, src)
}
func (m *NotifyPacketRsp) XXX_Size() int {
	return xxx_messageInfo_NotifyPacketRsp.Size(m)
}
func (m *NotifyPacketRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyPacketRsp.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyPacketRsp proto.InternalMessageInfo

func (m *NotifyPacketRsp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*GhostPacket)(nil), "protocol.ghost_packet")
	proto.RegisterType((*GhostUserasset)(nil), "protocol.ghost_userasset")
	proto.RegisterType((*RegisterVmReq)(nil), "protocol.register_vm_req")
	proto.RegisterType((*RegisterVmRsp)(nil), "protocol.register_vm_rsp")
	proto.RegisterType((*UnregisterVmReq)(nil), "protocol.unregister_vm_req")
	proto.RegisterType((*UnregisterVmRsp)(nil), "protocol.unregister_vm_rsp")
	proto.RegisterType((*BindSessionReq)(nil), "protocol.bind_session_req")
	proto.RegisterType((*BindSessionRsp)(nil), "protocol.bind_session_rsp")
	proto.RegisterType((*UnbindSessionReq)(nil), "protocol.unbind_session_req")
	proto.RegisterType((*UnbindSessionRsp)(nil), "protocol.unbind_session_rsp")
	proto.RegisterType((*LockUserassetReq)(nil), "protocol.lock_userasset_req")
	proto.RegisterType((*LockUserassetRsp)(nil), "protocol.lock_userasset_rsp")
	proto.RegisterType((*UnlockUserassetReq)(nil), "protocol.unlock_userasset_req")
	proto.RegisterType((*UnlockUserassetRsp)(nil), "protocol.unlock_userasset_rsp")
	proto.RegisterType((*DebugReq)(nil), "protocol.debug_req")
	proto.RegisterType((*DebugRsp)(nil), "protocol.debug_rsp")
	proto.RegisterType((*NotifyStatusReq)(nil), "protocol.notify_status_req")
	proto.RegisterType((*NotifyStatusRsp)(nil), "protocol.notify_status_rsp")
	proto.RegisterType((*NotifyPacketRsp)(nil), "protocol.notify_packet_rsp")
}

func init() { proto.RegisterFile("ghost.proto", fileDescriptor_77edc9f77fb63d46) }

var fileDescriptor_77edc9f77fb63d46 = []byte{
	// 768 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xcf, 0x4e, 0xdb, 0x4e,
	0x10, 0xc6, 0xb1, 0x13, 0xf0, 0x00, 0x3f, 0x7e, 0x6c, 0x29, 0x72, 0x0d, 0xaa, 0x90, 0x4f, 0x91,
	0x2a, 0xe5, 0x00, 0x07, 0x8e, 0x55, 0x5b, 0x24, 0x44, 0x45, 0xda, 0xca, 0x51, 0x90, 0x7a, 0x4a,
	0x1d, 0xef, 0x96, 0x5a, 0xe0, 0x3f, 0xf5, 0xae, 0x23, 0xe8, 0xa5, 0xea, 0xb1, 0xb7, 0x3e, 0x44,
	0xdf, 0xa1, 0x6f, 0xd2, 0xe7, 0xa9, 0x76, 0xec, 0xd8, 0xc6, 0x8e, 0x8d, 0x40, 0xb4, 0xa7, 0xec,
	0xec, 0xcc, 0x7e, 0xf3, 0xcd, 0xf8, 0xdb, 0xd9, 0xc0, 0xea, 0xf9, 0xa7, 0x90, 0x8b, 0x41, 0x14,
	0x87, 0x22, 0x24, 0x2b, 0xf8, 0xe3, 0x86, 0x97, 0x26, 0xb8, 0x61, 0xcc, 0xd2, 0x5d, 0xeb, 0x87,
	0x02, 0x6b, 0x18, 0x35, 0x89, 0x1c, 0xf7, 0x82, 0x09, 0xf2, 0x18, 0x7a, 0xae, 0x4f, 0x27, 0x1e,
	0x35, 0x94, 0x3d, 0xa5, 0xbf, 0x6e, 0x77, 0x5d, 0x9f, 0x9e, 0x50, 0xb2, 0x03, 0x7a, 0xc2, 0x59,
	0x3c, 0xa1, 0x8e, 0x70, 0x8c, 0x0e, 0x7a, 0x56, 0xe4, 0xc6, 0x91, 0x23, 0x1c, 0xb2, 0x0b, 0xba,
	0xf0, 0x7c, 0xc6, 0x85, 0xe3, 0x47, 0x86, 0x8a, 0xce, 0x62, 0x83, 0x98, 0xb0, 0xc2, 0x19, 0xe7,
	0x5e, 0x18, 0x70, 0x43, 0xdb, 0x53, 0xfb, 0x9a, 0x9d, 0xdb, 0x84, 0x80, 0x36, 0x0d, 0xe9, 0xb5,
	0xd1, 0xdd, 0x53, 0xfa, 0xba, 0x8d, 0x6b, 0x6b, 0x0c, 0x1b, 0x29, 0x23, 0x89, 0xef, 0x70, 0xce,
	0x84, 0x0c, 0x4b, 0x92, 0x8c, 0x92, 0x66, 0xe3, 0x9a, 0x18, 0xb0, 0x3c, 0x63, 0xb1, 0x84, 0x41,
	0x3e, 0x9a, 0x3d, 0x37, 0xc9, 0x16, 0x74, 0xf1, 0x18, 0x52, 0xd1, 0xed, 0xd4, 0xb0, 0x8e, 0x61,
	0x23, 0x66, 0xe7, 0x1e, 0x17, 0x2c, 0x9e, 0xcc, 0xfc, 0x49, 0xcc, 0x3e, 0x4b, 0x66, 0xd4, 0x9b,
	0x79, 0x88, 0xa1, 0x60, 0x6c, 0x6e, 0x57, 0xe1, 0xf5, 0x1c, 0xde, 0xf2, 0x2a, 0x40, 0x3c, 0x22,
	0xdb, 0xd0, 0x8b, 0x19, 0x4f, 0x2e, 0x05, 0xc2, 0x74, 0xed, 0xcc, 0x92, 0xbc, 0x67, 0xbe, 0x47,
	0x33, 0x82, 0xb8, 0x96, 0xb1, 0xb2, 0x3a, 0x8f, 0x22, 0x3d, 0xcd, 0xce, 0x2c, 0x19, 0x4b, 0x19,
	0x77, 0x0d, 0x2d, 0x6d, 0x85, 0x5c, 0x5b, 0xdf, 0x15, 0xd8, 0x4c, 0x82, 0x07, 0xa1, 0x9d, 0x73,
	0x51, 0x17, 0x72, 0xd1, 0x16, 0x72, 0xe9, 0x96, 0xb8, 0x3c, 0xaf, 0x51, 0x69, 0x2f, 0x1c, 0x01,
	0x3a, 0x25, 0x80, 0x0f, 0xf0, 0xff, 0xd4, 0x0b, 0xe8, 0x24, 0xfb, 0xf8, 0xb7, 0x96, 0xb2, 0x0b,
	0x7a, 0x16, 0x9a, 0x77, 0xb0, 0xd8, 0xc8, 0x25, 0xa1, 0x16, 0x92, 0xb0, 0xae, 0xaa, 0x19, 0x5a,
	0x18, 0x96, 0x33, 0x77, 0xda, 0x32, 0xab, 0x4d, 0x99, 0xb5, 0x52, 0xe6, 0x29, 0x90, 0x24, 0xf8,
	0xcb, 0xd5, 0x7d, 0xa9, 0xe7, 0xf8, 0x67, 0xf5, 0xfd, 0x52, 0x80, 0x5c, 0x86, 0xee, 0x45, 0x71,
	0x27, 0x1f, 0xbe, 0x40, 0x44, 0x4b, 0x62, 0x47, 0x48, 0x34, 0x99, 0x5c, 0xb5, 0x73, 0x9b, 0x1c,
	0xa6, 0xf3, 0x27, 0xbd, 0xd7, 0x52, 0x96, 0xab, 0xfb, 0x4f, 0x06, 0xf3, 0x89, 0x36, 0xa8, 0xcc,
	0x0b, 0xbb, 0x88, 0xb5, 0xbe, 0xd6, 0x89, 0xb7, 0x74, 0xcd, 0x80, 0x65, 0x76, 0x15, 0x79, 0x31,
	0x4b, 0x29, 0xab, 0xf6, 0xdc, 0xbc, 0x49, 0x40, 0xbd, 0x03, 0x81, 0x6f, 0x0a, 0x6c, 0x25, 0xc1,
	0x82, 0xe6, 0xdd, 0x68, 0x90, 0xd2, 0xd4, 0xa0, 0x4e, 0xa9, 0x41, 0xf7, 0xe6, 0x30, 0x58, 0x44,
	0xa1, 0xb9, 0x0d, 0xd6, 0x7b, 0xd0, 0x29, 0x9b, 0x26, 0xe7, 0xb7, 0x7e, 0xe4, 0x2d, 0x90, 0xef,
	0x43, 0x18, 0x65, 0x12, 0x4b, 0x0d, 0x79, 0xc2, 0xf5, 0x69, 0xe4, 0xc4, 0x8e, 0x9f, 0xcd, 0xe0,
	0xdc, 0xb6, 0x0e, 0x73, 0xe8, 0x3b, 0x8e, 0x8f, 0x67, 0xb0, 0x19, 0x84, 0xc2, 0xfb, 0x78, 0x3d,
	0xe1, 0xc2, 0x11, 0x09, 0x47, 0x6e, 0xdb, 0xd0, 0x4b, 0xad, 0xec, 0xb5, 0xca, 0x2c, 0x39, 0xac,
	0x2a, 0xc1, 0xf7, 0xce, 0x96, 0xbe, 0x8b, 0x6d, 0x00, 0xfb, 0xbf, 0x35, 0x58, 0x3b, 0x96, 0xdd,
	0x1f, 0xb1, 0x78, 0xe6, 0xb9, 0x8c, 0x1c, 0x01, 0xd8, 0xd9, 0xa4, 0x3c, 0x1b, 0x92, 0xd2, 0x37,
	0xaa, 0x8c, 0x72, 0xb3, 0xc9, 0xc5, 0x23, 0x6b, 0x89, 0xbc, 0x86, 0xb5, 0x71, 0x3e, 0x71, 0xcf,
	0x86, 0x64, 0xa7, 0x08, 0xae, 0x3d, 0x0a, 0x66, 0xb3, 0x13, 0xb1, 0x5e, 0x01, 0x8c, 0x58, 0x40,
	0xdf, 0xa5, 0x8f, 0xfc, 0x76, 0x55, 0x35, 0x69, 0x91, 0x65, 0x3a, 0x9c, 0x05, 0xb4, 0x54, 0xbb,
	0xb5, 0xd4, 0x57, 0xc8, 0x31, 0xac, 0xbe, 0xf4, 0x02, 0x3a, 0x4a, 0x45, 0x4a, 0xcc, 0x22, 0xba,
	0x3a, 0xfa, 0xcc, 0x46, 0x1f, 0xb2, 0x19, 0xc2, 0xfa, 0x18, 0x47, 0xd9, 0x1c, 0x6a, 0xb7, 0xcc,
	0xbe, 0x06, 0xd6, 0xe2, 0x9d, 0xc3, 0x9d, 0x86, 0xee, 0xc5, 0x98, 0xb3, 0xf8, 0x05, 0xfe, 0x5f,
	0x28, 0x1d, 0xa8, 0x5f, 0x3c, 0xb3, 0xc5, 0x8b, 0x70, 0x23, 0xd8, 0x18, 0xe3, 0x6d, 0x29, 0x00,
	0x9f, 0x96, 0x19, 0x2c, 0x80, 0x6c, 0xf5, 0x23, 0xe8, 0x01, 0x74, 0x8f, 0xa4, 0xee, 0xc9, 0xa3,
	0x22, 0x34, 0xbf, 0x63, 0x66, 0x7d, 0x53, 0x1e, 0xda, 0xff, 0xa9, 0x80, 0x7e, 0x36, 0x9c, 0xab,
	0xea, 0x14, 0xfe, 0x7b, 0x1b, 0xbc, 0x41, 0x55, 0x8e, 0x50, 0xd5, 0x65, 0x45, 0xd4, 0xee, 0x86,
	0xd9, 0xec, 0x44, 0x42, 0x27, 0x05, 0xda, 0x2d, 0xaa, 0xa8, 0x03, 0xdd, 0xd4, 0xc5, 0xb4, 0x87,
	0xfe, 0x83, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x59, 0x34, 0xd6, 0x70, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GhostServiceClient is the client API for GhostService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GhostServiceClient interface {
	// vm management
	RegisterVM(ctx context.Context, in *RegisterVmReq, opts ...grpc.CallOption) (*RegisterVmRsp, error)
	UnregisterVM(ctx context.Context, in *UnregisterVmReq, opts ...grpc.CallOption) (*UnregisterVmRsp, error)
	// send packet to client(s)
	SendPacket(ctx context.Context, opts ...grpc.CallOption) (GhostService_SendPacketClient, error)
	// session bind & unbind with uuid(user unique id)
	BindSession(ctx context.Context, in *BindSessionReq, opts ...grpc.CallOption) (*BindSessionRsp, error)
	UnbindSession(ctx context.Context, in *UnbindSessionReq, opts ...grpc.CallOption) (*UnbindSessionRsp, error)
	// user asset lock & unlock
	LockUserAsset(ctx context.Context, in *LockUserassetReq, opts ...grpc.CallOption) (*LockUserassetRsp, error)
	UnlockUserAsset(ctx context.Context, in *UnlockUserassetReq, opts ...grpc.CallOption) (*UnlockUserassetRsp, error)
	// debug
	Debug(ctx context.Context, in *DebugReq, opts ...grpc.CallOption) (*DebugRsp, error)
}

type ghostServiceClient struct {
	cc *grpc.ClientConn
}

func NewGhostServiceClient(cc *grpc.ClientConn) GhostServiceClient {
	return &ghostServiceClient{cc}
}

func (c *ghostServiceClient) RegisterVM(ctx context.Context, in *RegisterVmReq, opts ...grpc.CallOption) (*RegisterVmRsp, error) {
	out := new(RegisterVmRsp)
	err := c.cc.Invoke(ctx, "/protocol.GhostService/RegisterVM", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ghostServiceClient) UnregisterVM(ctx context.Context, in *UnregisterVmReq, opts ...grpc.CallOption) (*UnregisterVmRsp, error) {
	out := new(UnregisterVmRsp)
	err := c.cc.Invoke(ctx, "/protocol.GhostService/UnregisterVM", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ghostServiceClient) SendPacket(ctx context.Context, opts ...grpc.CallOption) (GhostService_SendPacketClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GhostService_serviceDesc.Streams[0], "/protocol.GhostService/SendPacket", opts...)
	if err != nil {
		return nil, err
	}
	x := &ghostServiceSendPacketClient{stream}
	return x, nil
}

type GhostService_SendPacketClient interface {
	Send(*GhostPacket) error
	CloseAndRecv() (*SendPacketRsp, error)
	grpc.ClientStream
}

type ghostServiceSendPacketClient struct {
	grpc.ClientStream
}

func (x *ghostServiceSendPacketClient) Send(m *GhostPacket) error {
	return x.ClientStream.SendMsg(m)
}

func (x *ghostServiceSendPacketClient) CloseAndRecv() (*SendPacketRsp, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SendPacketRsp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *ghostServiceClient) BindSession(ctx context.Context, in *BindSessionReq, opts ...grpc.CallOption) (*BindSessionRsp, error) {
	out := new(BindSessionRsp)
	err := c.cc.Invoke(ctx, "/protocol.GhostService/BindSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ghostServiceClient) UnbindSession(ctx context.Context, in *UnbindSessionReq, opts ...grpc.CallOption) (*UnbindSessionRsp, error) {
	out := new(UnbindSessionRsp)
	err := c.cc.Invoke(ctx, "/protocol.GhostService/UnbindSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ghostServiceClient) LockUserAsset(ctx context.Context, in *LockUserassetReq, opts ...grpc.CallOption) (*LockUserassetRsp, error) {
	out := new(LockUserassetRsp)
	err := c.cc.Invoke(ctx, "/protocol.GhostService/LockUserAsset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ghostServiceClient) UnlockUserAsset(ctx context.Context, in *UnlockUserassetReq, opts ...grpc.CallOption) (*UnlockUserassetRsp, error) {
	out := new(UnlockUserassetRsp)
	err := c.cc.Invoke(ctx, "/protocol.GhostService/UnlockUserAsset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ghostServiceClient) Debug(ctx context.Context, in *DebugReq, opts ...grpc.CallOption) (*DebugRsp, error) {
	out := new(DebugRsp)
	err := c.cc.Invoke(ctx, "/protocol.GhostService/Debug", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GhostServiceServer is the server API for GhostService service.
type GhostServiceServer interface {
	// vm management
	RegisterVM(context.Context, *RegisterVmReq) (*RegisterVmRsp, error)
	UnregisterVM(context.Context, *UnregisterVmReq) (*UnregisterVmRsp, error)
	// send packet to client(s)
	SendPacket(GhostService_SendPacketServer) error
	// session bind & unbind with uuid(user unique id)
	BindSession(context.Context, *BindSessionReq) (*BindSessionRsp, error)
	UnbindSession(context.Context, *UnbindSessionReq) (*UnbindSessionRsp, error)
	// user asset lock & unlock
	LockUserAsset(context.Context, *LockUserassetReq) (*LockUserassetRsp, error)
	UnlockUserAsset(context.Context, *UnlockUserassetReq) (*UnlockUserassetRsp, error)
	// debug
	Debug(context.Context, *DebugReq) (*DebugRsp, error)
}

// UnimplementedGhostServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGhostServiceServer struct {
}

func (*UnimplementedGhostServiceServer) RegisterVM(ctx context.Context, req *RegisterVmReq) (*RegisterVmRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterVM not implemented")
}
func (*UnimplementedGhostServiceServer) UnregisterVM(ctx context.Context, req *UnregisterVmReq) (*UnregisterVmRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnregisterVM not implemented")
}
func (*UnimplementedGhostServiceServer) SendPacket(srv GhostService_SendPacketServer) error {
	return status.Errorf(codes.Unimplemented, "method SendPacket not implemented")
}
func (*UnimplementedGhostServiceServer) BindSession(ctx context.Context, req *BindSessionReq) (*BindSessionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindSession not implemented")
}
func (*UnimplementedGhostServiceServer) UnbindSession(ctx context.Context, req *UnbindSessionReq) (*UnbindSessionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnbindSession not implemented")
}
func (*UnimplementedGhostServiceServer) LockUserAsset(ctx context.Context, req *LockUserassetReq) (*LockUserassetRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LockUserAsset not implemented")
}
func (*UnimplementedGhostServiceServer) UnlockUserAsset(ctx context.Context, req *UnlockUserassetReq) (*UnlockUserassetRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnlockUserAsset not implemented")
}
func (*UnimplementedGhostServiceServer) Debug(ctx context.Context, req *DebugReq) (*DebugRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Debug not implemented")
}

func RegisterGhostServiceServer(s *grpc.Server, srv GhostServiceServer) {
	s.RegisterService(&_GhostService_serviceDesc, srv)
}

func _GhostService_RegisterVM_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterVmReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GhostServiceServer).RegisterVM(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.GhostService/RegisterVM",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GhostServiceServer).RegisterVM(ctx, req.(*RegisterVmReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GhostService_UnregisterVM_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnregisterVmReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GhostServiceServer).UnregisterVM(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.GhostService/UnregisterVM",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GhostServiceServer).UnregisterVM(ctx, req.(*UnregisterVmReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GhostService_SendPacket_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GhostServiceServer).SendPacket(&ghostServiceSendPacketServer{stream})
}

type GhostService_SendPacketServer interface {
	SendAndClose(*SendPacketRsp) error
	Recv() (*GhostPacket, error)
	grpc.ServerStream
}

type ghostServiceSendPacketServer struct {
	grpc.ServerStream
}

func (x *ghostServiceSendPacketServer) SendAndClose(m *SendPacketRsp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *ghostServiceSendPacketServer) Recv() (*GhostPacket, error) {
	m := new(GhostPacket)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _GhostService_BindSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindSessionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GhostServiceServer).BindSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.GhostService/BindSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GhostServiceServer).BindSession(ctx, req.(*BindSessionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GhostService_UnbindSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnbindSessionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GhostServiceServer).UnbindSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.GhostService/UnbindSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GhostServiceServer).UnbindSession(ctx, req.(*UnbindSessionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GhostService_LockUserAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockUserassetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GhostServiceServer).LockUserAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.GhostService/LockUserAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GhostServiceServer).LockUserAsset(ctx, req.(*LockUserassetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GhostService_UnlockUserAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockUserassetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GhostServiceServer).UnlockUserAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.GhostService/UnlockUserAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GhostServiceServer).UnlockUserAsset(ctx, req.(*UnlockUserassetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GhostService_Debug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DebugReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GhostServiceServer).Debug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.GhostService/Debug",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GhostServiceServer).Debug(ctx, req.(*DebugReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GhostService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.GhostService",
	HandlerType: (*GhostServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterVM",
			Handler:    _GhostService_RegisterVM_Handler,
		},
		{
			MethodName: "UnregisterVM",
			Handler:    _GhostService_UnregisterVM_Handler,
		},
		{
			MethodName: "BindSession",
			Handler:    _GhostService_BindSession_Handler,
		},
		{
			MethodName: "UnbindSession",
			Handler:    _GhostService_UnbindSession_Handler,
		},
		{
			MethodName: "LockUserAsset",
			Handler:    _GhostService_LockUserAsset_Handler,
		},
		{
			MethodName: "UnlockUserAsset",
			Handler:    _GhostService_UnlockUserAsset_Handler,
		},
		{
			MethodName: "Debug",
			Handler:    _GhostService_Debug_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendPacket",
			Handler:       _GhostService_SendPacket_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "ghost.proto",
}

// VMServiceClient is the client API for VMService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VMServiceClient interface {
	OnNotifyStatus(ctx context.Context, in *NotifyStatusReq, opts ...grpc.CallOption) (*NotifyStatusRsp, error)
	OnNotifyPacket(ctx context.Context, opts ...grpc.CallOption) (VMService_OnNotifyPacketClient, error)
}

type vMServiceClient struct {
	cc *grpc.ClientConn
}

func NewVMServiceClient(cc *grpc.ClientConn) VMServiceClient {
	return &vMServiceClient{cc}
}

func (c *vMServiceClient) OnNotifyStatus(ctx context.Context, in *NotifyStatusReq, opts ...grpc.CallOption) (*NotifyStatusRsp, error) {
	out := new(NotifyStatusRsp)
	err := c.cc.Invoke(ctx, "/protocol.VMService/OnNotifyStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vMServiceClient) OnNotifyPacket(ctx context.Context, opts ...grpc.CallOption) (VMService_OnNotifyPacketClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VMService_serviceDesc.Streams[0], "/protocol.VMService/OnNotifyPacket", opts...)
	if err != nil {
		return nil, err
	}
	x := &vMServiceOnNotifyPacketClient{stream}
	return x, nil
}

type VMService_OnNotifyPacketClient interface {
	Send(*GhostPacket) error
	CloseAndRecv() (*NotifyPacketRsp, error)
	grpc.ClientStream
}

type vMServiceOnNotifyPacketClient struct {
	grpc.ClientStream
}

func (x *vMServiceOnNotifyPacketClient) Send(m *GhostPacket) error {
	return x.ClientStream.SendMsg(m)
}

func (x *vMServiceOnNotifyPacketClient) CloseAndRecv() (*NotifyPacketRsp, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(NotifyPacketRsp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// VMServiceServer is the server API for VMService service.
type VMServiceServer interface {
	OnNotifyStatus(context.Context, *NotifyStatusReq) (*NotifyStatusRsp, error)
	OnNotifyPacket(VMService_OnNotifyPacketServer) error
}

// UnimplementedVMServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVMServiceServer struct {
}

func (*UnimplementedVMServiceServer) OnNotifyStatus(ctx context.Context, req *NotifyStatusReq) (*NotifyStatusRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnNotifyStatus not implemented")
}
func (*UnimplementedVMServiceServer) OnNotifyPacket(srv VMService_OnNotifyPacketServer) error {
	return status.Errorf(codes.Unimplemented, "method OnNotifyPacket not implemented")
}

func RegisterVMServiceServer(s *grpc.Server, srv VMServiceServer) {
	s.RegisterService(&_VMService_serviceDesc, srv)
}

func _VMService_OnNotifyStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMServiceServer).OnNotifyStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.VMService/OnNotifyStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMServiceServer).OnNotifyStatus(ctx, req.(*NotifyStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _VMService_OnNotifyPacket_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(VMServiceServer).OnNotifyPacket(&vMServiceOnNotifyPacketServer{stream})
}

type VMService_OnNotifyPacketServer interface {
	SendAndClose(*NotifyPacketRsp) error
	Recv() (*GhostPacket, error)
	grpc.ServerStream
}

type vMServiceOnNotifyPacketServer struct {
	grpc.ServerStream
}

func (x *vMServiceOnNotifyPacketServer) SendAndClose(m *NotifyPacketRsp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *vMServiceOnNotifyPacketServer) Recv() (*GhostPacket, error) {
	m := new(GhostPacket)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _VMService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.VMService",
	HandlerType: (*VMServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OnNotifyStatus",
			Handler:    _VMService_OnNotifyStatus_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "OnNotifyPacket",
			Handler:       _VMService_OnNotifyPacket_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "ghost.proto",
}
