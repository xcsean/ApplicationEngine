// Code generated by protoc-gen-go. DO NOT EDIT.
// source: packet.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// used by cmd_id
type PacketType int32

const (
	// user type
	Packet_PUBLIC_BEGIN PacketType = 0
	// reserved type
	Packet_PRIVATE_BEGIN            PacketType = 60000
	Packet_PRIVATE_SESSION_ENTER    PacketType = 60001
	Packet_PRIVATE_SESSION_LEAVE    PacketType = 60002
	Packet_PRIVATE_SESSION_ROUTE    PacketType = 60003
	Packet_PRIVATE_SESSION_KICK     PacketType = 60004
	Packet_PRIVATE_SESSION_PING     PacketType = 60005
	Packet_PRIVATE_SESSION_PONG     PacketType = 60006
	Packet_PRIVATE_MASTER_SET       PacketType = 60011
	Packet_PRIVATE_MASTER_YOU       PacketType = 60012
	Packet_PRIVATE_MASTER_NOT       PacketType = 60013
	Packet_PRIVATE_BROADCAST_ALL    PacketType = 60021
	Packet_PRIVATE_KICK_ALL         PacketType = 60031
	Packet_PRIVATE_NOTIFY_CLIENT    PacketType = 65001
	Packet_PRIVATE_NOTIFY_VM_BIND   PacketType = 65011
	Packet_PRIVATE_NOTIFY_VM_UNBIND PacketType = 65012
	Packet_PRIVATE_END              PacketType = 65500
	Packet_PUBLIC_PING              PacketType = 65501
	Packet_PUBLIC_PONG              PacketType = 65502
	Packet_PUBLIC_SESSION_VERCHECK  PacketType = 65533
	Packet_PUBLIC_SESSION_VERREPLY  PacketType = 65534
	Packet_PUBLIC_END               PacketType = 65535
)

var PacketType_name = map[int32]string{
	0:     "PUBLIC_BEGIN",
	60000: "PRIVATE_BEGIN",
	60001: "PRIVATE_SESSION_ENTER",
	60002: "PRIVATE_SESSION_LEAVE",
	60003: "PRIVATE_SESSION_ROUTE",
	60004: "PRIVATE_SESSION_KICK",
	60005: "PRIVATE_SESSION_PING",
	60006: "PRIVATE_SESSION_PONG",
	60011: "PRIVATE_MASTER_SET",
	60012: "PRIVATE_MASTER_YOU",
	60013: "PRIVATE_MASTER_NOT",
	60021: "PRIVATE_BROADCAST_ALL",
	60031: "PRIVATE_KICK_ALL",
	65001: "PRIVATE_NOTIFY_CLIENT",
	65011: "PRIVATE_NOTIFY_VM_BIND",
	65012: "PRIVATE_NOTIFY_VM_UNBIND",
	65500: "PRIVATE_END",
	65501: "PUBLIC_PING",
	65502: "PUBLIC_PONG",
	65533: "PUBLIC_SESSION_VERCHECK",
	65534: "PUBLIC_SESSION_VERREPLY",
	65535: "PUBLIC_END",
}

var PacketType_value = map[string]int32{
	"PUBLIC_BEGIN":             0,
	"PRIVATE_BEGIN":            60000,
	"PRIVATE_SESSION_ENTER":    60001,
	"PRIVATE_SESSION_LEAVE":    60002,
	"PRIVATE_SESSION_ROUTE":    60003,
	"PRIVATE_SESSION_KICK":     60004,
	"PRIVATE_SESSION_PING":     60005,
	"PRIVATE_SESSION_PONG":     60006,
	"PRIVATE_MASTER_SET":       60011,
	"PRIVATE_MASTER_YOU":       60012,
	"PRIVATE_MASTER_NOT":       60013,
	"PRIVATE_BROADCAST_ALL":    60021,
	"PRIVATE_KICK_ALL":         60031,
	"PRIVATE_NOTIFY_CLIENT":    65001,
	"PRIVATE_NOTIFY_VM_BIND":   65011,
	"PRIVATE_NOTIFY_VM_UNBIND": 65012,
	"PRIVATE_END":              65500,
	"PUBLIC_PING":              65501,
	"PUBLIC_PONG":              65502,
	"PUBLIC_SESSION_VERCHECK":  65533,
	"PUBLIC_SESSION_VERREPLY":  65534,
	"PUBLIC_END":               65535,
}

func (x PacketType) String() string {
	return proto.EnumName(PacketType_name, int32(x))
}

func (PacketType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{0, 0}
}

type Packet struct {
	CmdId                int32    `protobuf:"zigzag32,1,opt,name=cmd_id,json=cmdId,proto3" json:"cmd_id,omitempty"`
	UserData             uint32   `protobuf:"varint,2,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	Timestamp            uint32   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Body                 string   `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Packet) Reset()         { *m = Packet{} }
func (m *Packet) String() string { return proto.CompactTextString(m) }
func (*Packet) ProtoMessage()    {}
func (*Packet) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{0}
}

func (m *Packet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Packet.Unmarshal(m, b)
}
func (m *Packet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Packet.Marshal(b, m, deterministic)
}
func (m *Packet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Packet.Merge(m, src)
}
func (m *Packet) XXX_Size() int {
	return xxx_messageInfo_Packet.Size(m)
}
func (m *Packet) XXX_DiscardUnknown() {
	xxx_messageInfo_Packet.DiscardUnknown(m)
}

var xxx_messageInfo_Packet proto.InternalMessageInfo

func (m *Packet) GetCmdId() int32 {
	if m != nil {
		return m.CmdId
	}
	return 0
}

func (m *Packet) GetUserData() uint32 {
	if m != nil {
		return m.UserData
	}
	return 0
}

func (m *Packet) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Packet) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

// used by reserved type
type PacketReservedBody struct {
	Kv                   map[string]string `protobuf:"bytes,1,rep,name=kv,proto3" json:"kv,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PacketReservedBody) Reset()         { *m = PacketReservedBody{} }
func (m *PacketReservedBody) String() string { return proto.CompactTextString(m) }
func (*PacketReservedBody) ProtoMessage()    {}
func (*PacketReservedBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{0, 0}
}

func (m *PacketReservedBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PacketReservedBody.Unmarshal(m, b)
}
func (m *PacketReservedBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PacketReservedBody.Marshal(b, m, deterministic)
}
func (m *PacketReservedBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PacketReservedBody.Merge(m, src)
}
func (m *PacketReservedBody) XXX_Size() int {
	return xxx_messageInfo_PacketReservedBody.Size(m)
}
func (m *PacketReservedBody) XXX_DiscardUnknown() {
	xxx_messageInfo_PacketReservedBody.DiscardUnknown(m)
}

var xxx_messageInfo_PacketReservedBody proto.InternalMessageInfo

func (m *PacketReservedBody) GetKv() map[string]string {
	if m != nil {
		return m.Kv
	}
	return nil
}

type SessionPacket struct {
	Sessions             []uint64 `protobuf:"varint,1,rep,packed,name=sessions,proto3" json:"sessions,omitempty"`
	Common               *Packet  `protobuf:"bytes,2,opt,name=common,proto3" json:"common,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionPacket) Reset()         { *m = SessionPacket{} }
func (m *SessionPacket) String() string { return proto.CompactTextString(m) }
func (*SessionPacket) ProtoMessage()    {}
func (*SessionPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{1}
}

func (m *SessionPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionPacket.Unmarshal(m, b)
}
func (m *SessionPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionPacket.Marshal(b, m, deterministic)
}
func (m *SessionPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionPacket.Merge(m, src)
}
func (m *SessionPacket) XXX_Size() int {
	return xxx_messageInfo_SessionPacket.Size(m)
}
func (m *SessionPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionPacket.DiscardUnknown(m)
}

var xxx_messageInfo_SessionPacket proto.InternalMessageInfo

func (m *SessionPacket) GetSessions() []uint64 {
	if m != nil {
		return m.Sessions
	}
	return nil
}

func (m *SessionPacket) GetCommon() *Packet {
	if m != nil {
		return m.Common
	}
	return nil
}

type StreamSessionPacketReq struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamSessionPacketReq) Reset()         { *m = StreamSessionPacketReq{} }
func (m *StreamSessionPacketReq) String() string { return proto.CompactTextString(m) }
func (*StreamSessionPacketReq) ProtoMessage()    {}
func (*StreamSessionPacketReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{2}
}

func (m *StreamSessionPacketReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamSessionPacketReq.Unmarshal(m, b)
}
func (m *StreamSessionPacketReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamSessionPacketReq.Marshal(b, m, deterministic)
}
func (m *StreamSessionPacketReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamSessionPacketReq.Merge(m, src)
}
func (m *StreamSessionPacketReq) XXX_Size() int {
	return xxx_messageInfo_StreamSessionPacketReq.Size(m)
}
func (m *StreamSessionPacketReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamSessionPacketReq.DiscardUnknown(m)
}

var xxx_messageInfo_StreamSessionPacketReq proto.InternalMessageInfo

func (m *StreamSessionPacketReq) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type StreamSessionPacketRsp struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamSessionPacketRsp) Reset()         { *m = StreamSessionPacketRsp{} }
func (m *StreamSessionPacketRsp) String() string { return proto.CompactTextString(m) }
func (*StreamSessionPacketRsp) ProtoMessage()    {}
func (*StreamSessionPacketRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{3}
}

func (m *StreamSessionPacketRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamSessionPacketRsp.Unmarshal(m, b)
}
func (m *StreamSessionPacketRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamSessionPacketRsp.Marshal(b, m, deterministic)
}
func (m *StreamSessionPacketRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamSessionPacketRsp.Merge(m, src)
}
func (m *StreamSessionPacketRsp) XXX_Size() int {
	return xxx_messageInfo_StreamSessionPacketRsp.Size(m)
}
func (m *StreamSessionPacketRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamSessionPacketRsp.DiscardUnknown(m)
}

var xxx_messageInfo_StreamSessionPacketRsp proto.InternalMessageInfo

func (m *StreamSessionPacketRsp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterEnum("protocol.PacketType", PacketType_name, PacketType_value)
	proto.RegisterType((*Packet)(nil), "protocol.packet")
	proto.RegisterType((*PacketReservedBody)(nil), "protocol.packet.reserved_body")
	proto.RegisterMapType((map[string]string)(nil), "protocol.packet.reserved_body.KvEntry")
	proto.RegisterType((*SessionPacket)(nil), "protocol.session_packet")
	proto.RegisterType((*StreamSessionPacketReq)(nil), "protocol.stream_session_packet_req")
	proto.RegisterType((*StreamSessionPacketRsp)(nil), "protocol.stream_session_packet_rsp")
}

func init() { proto.RegisterFile("packet.proto", fileDescriptor_e9ef1a6541f9f9e7) }

var fileDescriptor_e9ef1a6541f9f9e7 = []byte{
	// 574 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0x4f, 0x6f, 0xd3, 0x4c,
	0x10, 0x87, 0xdf, 0x64, 0xd3, 0xbc, 0xcd, 0xb4, 0x45, 0xdb, 0xa5, 0x2d, 0x26, 0x2d, 0x28, 0xca,
	0x01, 0xe5, 0x94, 0x43, 0x2b, 0x10, 0xe2, 0xe6, 0x38, 0x4b, 0xb1, 0xe2, 0xda, 0xd1, 0xda, 0x89,
	0xd4, 0xd3, 0xca, 0x8d, 0xf7, 0x50, 0xa5, 0xae, 0x83, 0xed, 0x46, 0xca, 0x85, 0xcf, 0xc4, 0x37,
	0xe0, 0x4b, 0xe4, 0x08, 0x88, 0xff, 0x12, 0x02, 0x4e, 0xc0, 0xa9, 0x02, 0x23, 0x6f, 0x6c, 0x50,
	0x4a, 0xc2, 0xc9, 0x3b, 0xcf, 0xe3, 0xb1, 0x7f, 0x1a, 0x8f, 0x61, 0x7d, 0xe4, 0x0e, 0x86, 0x22,
	0x6e, 0x8e, 0xc2, 0x20, 0x0e, 0xc8, 0xaa, 0xbc, 0x0c, 0x82, 0xb3, 0xfa, 0xd3, 0x32, 0x94, 0x67,
	0x8a, 0x6c, 0x43, 0x79, 0xe0, 0x7b, 0xfc, 0xd4, 0x53, 0x0a, 0xb5, 0x42, 0x63, 0x93, 0xad, 0x0c,
	0x7c, 0x4f, 0xf7, 0xc8, 0x2e, 0x54, 0x2e, 0x22, 0x11, 0x72, 0xcf, 0x8d, 0x5d, 0xa5, 0x58, 0x2b,
	0x34, 0x36, 0xd8, 0x6a, 0x0a, 0xda, 0x6e, 0xec, 0x92, 0x3d, 0xa8, 0xc4, 0xa7, 0xbe, 0x88, 0x62,
	0xd7, 0x1f, 0x29, 0x48, 0xca, 0x3f, 0x80, 0x10, 0x28, 0x9d, 0x04, 0xde, 0x44, 0x29, 0xd5, 0x0a,
	0x8d, 0x0a, 0x93, 0xe7, 0xea, 0x13, 0xd8, 0x08, 0x45, 0x24, 0xc2, 0xb1, 0xf0, 0x78, 0x0a, 0xc8,
	0x3d, 0x28, 0x0e, 0xc7, 0x4a, 0xa1, 0x86, 0x1a, 0x6b, 0xfb, 0x77, 0x9a, 0x79, 0xb0, 0x66, 0x96,
	0x77, 0xee, 0xde, 0x66, 0x67, 0x4c, 0xcf, 0xe3, 0x70, 0xc2, 0x8a, 0xc3, 0x71, 0xf5, 0x2e, 0xfc,
	0x9f, 0x95, 0x04, 0x03, 0x1a, 0x8a, 0x89, 0x8c, 0x5d, 0x61, 0xe9, 0x91, 0x6c, 0xc1, 0xca, 0xd8,
	0x3d, 0xbb, 0x10, 0x32, 0x70, 0x85, 0xcd, 0x8a, 0x07, 0xc5, 0xfb, 0x85, 0xfa, 0xb3, 0x12, 0x94,
	0xe2, 0xc9, 0x48, 0x10, 0x0c, 0xeb, 0xdd, 0x5e, 0xcb, 0xd0, 0x35, 0xde, 0xa2, 0x87, 0xba, 0x89,
	0xff, 0x23, 0xd7, 0x61, 0xa3, 0xcb, 0xf4, 0xbe, 0xea, 0xd0, 0x0c, 0xbd, 0x9a, 0x22, 0xb2, 0x0b,
	0xdb, 0x39, 0xb4, 0xa9, 0x6d, 0xeb, 0x96, 0xc9, 0xa9, 0xe9, 0x50, 0x86, 0x5f, 0x2f, 0x96, 0x06,
	0x55, 0xfb, 0x14, 0xbf, 0x59, 0x2c, 0x99, 0xd5, 0x73, 0x28, 0x7e, 0x3b, 0x45, 0xa4, 0x0a, 0x5b,
	0x57, 0x65, 0x47, 0xd7, 0x3a, 0xf8, 0xdd, 0x62, 0xd7, 0xd5, 0xcd, 0x43, 0xfc, 0x7e, 0x89, 0xb3,
	0xcc, 0x43, 0xfc, 0x61, 0x8a, 0x88, 0x02, 0x24, 0x77, 0x47, 0xaa, 0xed, 0x50, 0xc6, 0x6d, 0xea,
	0xe0, 0x4f, 0x0b, 0xcd, 0xb1, 0xd5, 0xc3, 0x9f, 0x17, 0x1a, 0xd3, 0x72, 0xf0, 0x97, 0xf9, 0xf8,
	0x2d, 0x66, 0xa9, 0x6d, 0x4d, 0xb5, 0x1d, 0xae, 0x1a, 0x06, 0xfe, 0x3e, 0x45, 0x64, 0x07, 0x70,
	0x2e, 0xd3, 0xd8, 0x92, 0x27, 0xf3, 0x4d, 0xa6, 0xe5, 0xe8, 0x0f, 0x8f, 0xb9, 0x66, 0xe8, 0xd4,
	0x74, 0xf0, 0xc7, 0x4b, 0x44, 0xf6, 0x60, 0xe7, 0x8a, 0xec, 0x1f, 0xf1, 0x96, 0x6e, 0xb6, 0xf1,
	0xd7, 0x4b, 0x44, 0x6e, 0x83, 0xf2, 0xb7, 0xed, 0x99, 0xd2, 0x7f, 0xbb, 0x44, 0x64, 0x13, 0xd6,
	0x72, 0x4f, 0xcd, 0x36, 0x7e, 0x9e, 0xcc, 0xd0, 0xec, 0x13, 0xca, 0xf9, 0xbc, 0x98, 0x47, 0xe9,
	0x58, 0x5e, 0x26, 0x88, 0xdc, 0x82, 0x1b, 0x19, 0xca, 0x27, 0xd6, 0xa7, 0x4c, 0x7b, 0x44, 0xb5,
	0x0e, 0xfe, 0xb1, 0x4c, 0x33, 0xda, 0x35, 0x8e, 0xf1, 0xcf, 0x04, 0x11, 0x0c, 0x90, 0xe9, 0xf4,
	0xad, 0x49, 0x82, 0xea, 0x7d, 0xb8, 0x16, 0x89, 0x28, 0x3a, 0x0d, 0xce, 0x79, 0xf6, 0xe7, 0x54,
	0x61, 0x35, 0x23, 0x91, 0x5c, 0xe4, 0x12, 0xfb, 0x5d, 0x93, 0x06, 0x94, 0x07, 0x81, 0xef, 0x07,
	0xe7, 0x72, 0x15, 0xd7, 0xf6, 0xf1, 0xd5, 0x15, 0x67, 0x99, 0xaf, 0x1f, 0xc0, 0xcd, 0x28, 0x0e,
	0x85, 0xeb, 0xf3, 0xf9, 0xc7, 0xf3, 0x50, 0x3c, 0x26, 0x3b, 0x50, 0x0e, 0x45, 0x74, 0x71, 0x16,
	0xcb, 0x2d, 0x5f, 0x61, 0x59, 0xf5, 0x8f, 0xa6, 0x68, 0xb4, 0xac, 0xe9, 0xa4, 0x2c, 0x23, 0x1c,
	0xfc, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x97, 0x62, 0xe0, 0xb6, 0x15, 0x04, 0x00, 0x00,
}
