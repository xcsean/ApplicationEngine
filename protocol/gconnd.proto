syntax = "proto3";
package gconnd;

message gconnd_packet {
    uint32 cmd_id = 1;
    uint32 user_data = 2;
    uint32 timestamp = 3;
    repeated uint64 sessions = 4;
    string body = 5;
}

// master
message register_master_req {
    string division = 1;
}

message register_master_rsp {
    int32 result = 1;
    uint64 master_id = 2;
}

// session
message session_alive_req {
    uint64 session_id = 1;
}

message session_alive_rsp {
    int32 result = 1;
    int32 status = 2;
}

// send packet
message send_packet_rsp {
    int32 result = 1;
}

service GconndService {
    // master management
    rpc RegisterMaster(register_master_req) returns(register_master_rsp) {}

    // session query
    rpc IsSessionAlive(session_alive_req) returns(session_alive_rsp) {}

    // send packets to client(s)
    rpc SendPacket(stream gconnd_packet) returns(send_packet_rsp) {}
}